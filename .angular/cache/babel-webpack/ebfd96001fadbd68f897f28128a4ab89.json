{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Desktop/React/weather/weather/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mac/Desktop/React/weather/weather/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { environment } from './../environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var WeatherService = /*#__PURE__*/(function () {\n  var WeatherService = /*#__PURE__*/function () {\n    function WeatherService(http) {\n      _classCallCheck(this, WeatherService);\n\n      this.http = http;\n      /**\n       * Url to api\n       */\n\n      this.api = environment.apiUrl;\n      /**\n       * Token of the api\n       */\n\n      this.key = environment.apiKey;\n    }\n    /**\n     * Get the weather information by zipcode\n     *\n     * @param zipCode of place for search information\n     * @returns\n     */\n\n\n    _createClass(WeatherService, [{\n      key: \"getInfo\",\n      value: function getInfo(zipCode) {\n        var url = \"\".concat(this.api, \"weather?zip=\").concat(zipCode, \"&appid=\").concat(this.key, \"&units=metric\");\n        return this.http.get(url);\n      }\n      /**\n       * Get 5-day forecast of the indicated zipcode\n       *\n       * @param zipCode of place for search\n       * @returns\n       */\n\n    }, {\n      key: \"getWeather\",\n      value: function getWeather(zipCode) {\n        var url = \"\".concat(this.api, \"forecast/daily?zip=\").concat(zipCode, \"&appid=\").concat(this.key, \"&cnt=5\");\n        return this.http.get(url);\n      }\n      /**\n       * Get the url of the icon depending on the selected weather\n       *\n       * @param weather to find icon\n       * @returns string icon\n       */\n\n    }, {\n      key: \"getIcon\",\n      value: function getIcon(weather) {\n        var icon = 'https://www.angulartraining.com/images/weather/';\n\n        switch (weather) {\n          case 'Clear':\n            return icon + 'sun.png';\n\n          case 'Clouds':\n            return icon + 'clouds.png';\n\n          case 'Rain':\n            return icon + 'rain.png';\n\n          case 'Snow':\n            return icon + 'snow.png';\n\n          default:\n            return icon + 'sun.png';\n        }\n      }\n    }]);\n\n    return WeatherService;\n  }();\n\n  WeatherService.ɵfac = function WeatherService_Factory(t) {\n    return new (t || WeatherService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  WeatherService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WeatherService,\n    factory: WeatherService.ɵfac,\n    providedIn: 'root'\n  });\n  return WeatherService;\n})();","map":null,"metadata":{},"sourceType":"module"}